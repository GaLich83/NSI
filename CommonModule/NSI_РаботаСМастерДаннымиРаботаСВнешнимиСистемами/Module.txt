Функция ПолучитьПустуюСтруктуруМетодаЗапроса() Экспорт
	ПустойЭлемент = Справочники.NSI_ИсточникиЗапросовМД.СоздатьЭлемент();
	ТаблицаЗначенийНастройки = ПустойЭлемент.НастройкиЗапросов.Выгрузить();
	СтруктураМетодаЗапроса = Новый Структура;
	Для Каждого Колонка Из ТаблицаЗначенийНастройки.Колонки Цикл
		Если Колонка.Имя = "НомерСтроки" Тогда
			Продолжить;
		КонецЕсли;
		СтруктураМетодаЗапроса.Вставить(Колонка.Имя, Колонка.ТипЗначения.ПривестиЗначение(Неопределено));
	КонецЦикла;
	Возврат СтруктураМетодаЗапроса;
КонецФункции

Функция ПолучитьОписаниеМетодаЗапросаПоИсточнику(ИсточникЗапросаМД, ИмяМетода) Экспорт
	Если ЗначениеЗаполнено(ИсточникЗапросаМД) Тогда
		СтрокаМетода = ИсточникЗапросаМД.НастройкиЗапросов.Найти(ИмяМетода, "ИмяМетодаЗапроса");
		Если СтрокаМетода = Неопределено Тогда
			ВызватьИсключение "Метод не описан";
		КонецЕсли;
		СтруктураМетода = ПолучитьПустуюСтруктуруМетодаЗапроса();
		ЗаполнитьЗначенияСвойств(СтруктураМетода, СтрокаМетода);
		Возврат СтруктураМетода;
	Иначе
		ВызватьИсключение "Источник не найден";
	КонецЕсли;	
КонецФункции

Функция ПроверитьРаботуМетода(СтруктураМетодаЗапроса, ПроверяемаяФункция) Экспорт
	ТЗПараметры = NSI_РаботаСМастерДаннымиСервер.ПрочитатьОбъектИзXML(СтруктураМетодаЗапроса.СписокПараметровОжидаемыхОтИсточникаЗапроса);
	Параметры = Новый Структура;
	Для Каждого СтрокаПараметров Из ТЗПараметры Цикл
		Параметры.Вставить(СтрокаПараметров.ИмяРеквизита, СтрокаПараметров.ДанныеПроверки);
	КонецЦикла;
	Выполнить(СтруктураМетодаЗапроса[ПроверяемаяФункция]);
	Сообщить("Проверка метода завершена");
КонецФункции

Функция ВыполнитьМетод(СтруктураМетодаЗапроса, ФункцияМетода, Параметры) Экспорт
	ПроверитьПереданныйСписокПараметров(Параметры, NSI_РаботаСМастерДаннымиСервер.ПрочитатьОбъектИзXML(СтруктураМетодаЗапроса.СписокПараметровОжидаемыхОтИсточникаЗапроса));
	Результат = Неопределено;
	Выполнить(СтруктураМетодаЗапроса[ФункцияМетода]);
	Возврат Результат;
КонецФункции

Функция ПроверитьПереданныйСписокПараметров(ПереданныеПараметры, ТЗПараметры)
	Для Каждого СтрокаПараметров Из ТЗПараметры Цикл
		ЗначениеПараметра = Неопределено;
		ПереданныеПараметры.Свойство(СтрокаПараметров.ИмяРеквизита, ЗначениеПараметра);
		Если Не СтрокаПараметров.ТипРеквизита.ПривестиЗначение(ЗначениеПараметра)=ЗначениеПараметра Тогда
			ВызватьИсключение "Тип переданного значения параметра "+СтрокаПараметров.Ключ+" не соответствует установленному типу для метода.";
		КонецЕсли;
	КонецЦикла;
КонецФункции

Функция ВыполнитьВызовМетодаОбработкиДанныхВнешнейСистемы(СистемаИсточник, ИмяМетода, Параметры) Экспорт
	Ответ = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("mdm", "GetMasterDataByMethodResponse"));
	ИсточникМД = Справочники.NSI_ИсточникиЗапросовМД.НайтиПоКоду(СистемаИсточник);
	Если ИсточникМД.Пустая() Тогда
		ВернутьОшибкуВебСервиса(Ответ.Errors, "UnknownSourceSystem", "Описание базы-источника данных не найдено.");
		Возврат Ответ;  
	КонецЕсли;
	Попытка
		СтруктураМетодаЗапроса = NSI_РаботаСМастерДаннымиРаботаСВнешнимиСистемами.ПолучитьОписаниеМетодаЗапросаПоИсточнику(ИсточникМД, ИмяМетода);
	Исключение
		ВернутьОшибкуВебСервиса(Ответ.Errors, "UnknownMethod", "Описание метода "+ИмяМетода+" базы-источника данных не найдено.");
		Возврат Ответ;
	КонецПопытки;
	// Проверка валидности переданных в метод параметров;
	Результат = Неопределено;
	Попытка
		Результат = NSI_РаботаСМастерДаннымиРаботаСВнешнимиСистемами.ВыполнитьМетод(СтруктураМетодаЗапроса, "ПроверкаВалидностиЗапроса", Параметры);
	Исключение
		ВернутьОшибкуВебСервиса(Ответ.Errors, "UnspecifiedError", ОписаниеОшибки());
		Возврат Ответ;
	КонецПопытки;
	Если Не Результат = Истина Тогда
		ВернутьОшибкуВебСервиса(Ответ.Errors, "UnspecifiedError", "Переданные в метод параметры невалидны.");
		Возврат Ответ;
	КонецЕсли;
	// Функция для принятия решения об асинхроне
	Результат = Неопределено;
	Попытка
		Результат = NSI_РаботаСМастерДаннымиРаботаСВнешнимиСистемами.ВыполнитьМетод(СтруктураМетодаЗапроса, "УсловиеПринятияРешенияОбАсинхроне", Параметры);
	Исключение
		ВернутьОшибкуВебСервиса(Ответ.Errors, "UnspecifiedError", ОписаниеОшибки());
		Возврат Ответ;
	КонецПопытки;
	Если Результат = Истина Тогда
		// Здесь должен быть вызов метода для асинхронной работы с переданными данными, пока же ставим Ложь;
		Результат = Ложь;
	Иначе
		Результат = Ложь;
	КонецЕсли;
	ВключенАсинхронныйРежим = Результат;
	Результат = Неопределено;
	Попытка
		Если ВключенАсинхронныйРежим Тогда
			//NSI_РаботаСМастерДаннымиРаботаСВнешнимиСистемами.ВыполнитьМетод(СтруктураМетодаЗапроса, "ОписаниеАсинхронногоЗапроса");
			//Ответ.AsyncTicket = НомерТикетаАсинхронногоЗапроса;
			Возврат Ответ;
		Иначе
			Результат = NSI_РаботаСМастерДаннымиРаботаСВнешнимиСистемами.ВыполнитьМетод(СтруктураМетодаЗапроса, "ОписаниеСинхронногоЗапроса", Параметры);
			Если Не ЗначениеЗаполнено(Результат) Тогда
				ВернутьОшибкуВебСервиса(Ответ.Errors, "DataNotFound", "Метод вернул пустой результат запроса");
				Возврат Ответ;
			Иначе
				Если ТипЗнч(Результат)=Тип("ТаблицаЗначений") Тогда
					ТаблицаРезультата = Результат;
				Иначе
					ТаблицаРезультата = Новый ТаблицаЗначений;
					ТаблицаРезультата.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.NSI_МастерДанные"));
					Если ТипЗнч(Результат)=Тип("СправочникСсылка.NSI_МастерДанные") Тогда
						НоваяСтрока = ТаблицаРезультата.Добавить();
						НоваяСтрока.Ссылка = Результат;
					ИначеЕсли ТипЗнч(Результат)=Тип("Массив") Тогда
						Для Каждого СсылкаРезультат Из Результат Цикл
							НоваяСтрока = ТаблицаРезультата.Добавить();
							НоваяСтрока.Ссылка = СсылкаРезультат;
						КонецЦикла;
					ИначеЕсли ТипЗнч(Результат)=Тип("СписокЗначений") Тогда
						Для Каждого СсылкаРезультат Из Результат Цикл
							НоваяСтрока = ТаблицаРезультата.Добавить();
							НоваяСтрока.Ссылка = СсылкаРезультат.Значение;
						КонецЦикла;
					Иначе
						ВернутьОшибкуВебСервиса(Ответ.Errors, "DataNotFound", "Неизвестный формат результата выполнения метода.");
						Возврат Ответ;
					КонецЕсли;
				КонецЕсли;
				Ответ.DataResponse = NSI_РаботаСМастерДаннымиПоиск.СформироватьОтветПоСпискуМастерДанных(ТаблицаРезультата);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ВернутьОшибкуВебСервиса(Ответ.Errors, "UnspecifiedError", ОписаниеОшибки());
		Возврат Ответ;
	КонецПопытки;
	Возврат Ответ;
КонецФункции

Функция ВернутьОшибкуВебСервиса(СписокОшибок, КодОшибки, ОписаниеОшибки) Экспорт
	Ошибка = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("mdm", "ErrorData"));
	Ошибка.Code = КодОшибки;
	Ошибка.Description = ОписаниеОшибки;
	СписокОшибок.Добавить(Ошибка);
КонецФункции

Функция СоздатьПараметрыKeysПоСтруктуре(Фабрика, Структура) Экспорт
	Keys = Фабрика.Создать(Фабрика.Тип("mdm", "Keys"));
	Для Каждого СтрокаСтруктуры Из Структура Цикл
		Ключ = Фабрика.Создать(Фабрика.Тип("mdm", "KeyValue"));
		Ключ.Key = СтрокаСтруктуры.Ключ;
		Ключ.Value = СтрокаСтруктуры.Значение;
		Keys.Key.Добавить(Ключ);
	КонецЦикла;
	Возврат Keys;
КонецФункции



