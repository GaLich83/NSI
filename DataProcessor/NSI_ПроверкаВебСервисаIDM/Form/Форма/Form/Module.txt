
&НаКлиенте
Процедура ВыполнитьМетод(Команда)
	ВыполнитьМетодНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьМетодНаСервере()
	Определение = Новый WSОпределения("http://1cmsfo/nsi_test/ws/idm.1cws?wsdl", "IDM_Admin", "IDM_Admin");
	Прокси = Новый WSПрокси(Определение, "idm", "IDM", "IDMSoap");
	Прокси.Пользователь = "IDM_Admin";
	Прокси.Пароль = "IDM_Admin";
	Er = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип("idm", "ListOfErrors"));
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.РаботаСУчетнымиЗаписями Тогда
		Результат = Ложь;
		Account = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип("idm", "Account"));
		Если AccountMethod = "EditAccount" Тогда
			Account.UserID = AccountUserID;
		Иначе
			Account.UserID = "";
		КонецЕсли;
		Account.Family = AccountFamily;
		Account.Name = AccountName;
		Account.Otchestvo = AccountOtchestvo;
		Account.Position = AccountPosition;
		Account.Division = AccountDivision;
		Account.DateOfChange = AccountDateOfChange;
		МассивСтатус = Новый Массив;
		МассивСтатус.Добавить(?(AccountStatus = Перечисления.NSI_СтатусыУЗ.Активна, "Active", "Inactive"));
		Account.Status = Новый ФиксированныйМассив(МассивСтатус);
		Account.ID_SMP = AccountID_SMP;
		Account.LoginAD = AccountLoginAD;
		Account.Technical = AccountTechnical;
		Выполнить("Результат = Прокси."+AccountMethod+"(Account, Er)");
		ЗаполнитьAccount(Account);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ПолучениеСпискаАккаунтов Тогда
		Результат = Прокси.GetListOfAccounts(Er);
		ЗаполнитьСписокАккаунтов(Результат);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ПолучениеСпискаБаз Тогда
		Результат = Прокси.GetListOfBases(Er);
		ЗаполнитьСписокБаз(Результат);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ПолучениеСпискаРолей Тогда
		Результат = Прокси.GetListOfRoles(Er);
		ЗаполнитьСписокРолей(Результат);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ИзмениеРолейВАккаунте Тогда
		Результат = Ложь;
		Выполнить("Результат = Прокси."+RoleMethod+"(UserID, RoleID, Er)");
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ИзмененияСпискаРолей Тогда
		Результат = Ложь;
		ТЗСпискаИзменения = СписокИзмененияРолей.Выгрузить();
		ТЗСпискаИзменения.Сортировать("UserID");
		ТекущийUserID = Неопределено;
		СписокИзмененияРолейПоЮзерам = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип("idm", "ListOfChangeRolesAccounts"));
		СписокИзмененияРолейПоЮзеру = Неопределено;
		Для Каждого СтрокаСпискаИзменения Из ТЗСпискаИзменения Цикл
			UserID = СтрокаСпискаИзменения.UserID;
			Если Не ТекущийUserID=UserID Тогда
				Если ТекущийUserID<>Неопределено Тогда
					СписокИзмененияРолейПоЮзерам.ListOfChangeRolesByAccount.Добавить(СписокИзмененияРолейПоЮзеру);
				КонецЕсли;
				СписокИзмененияРолейПоЮзеру = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип("idm", "ListOfChangeRolesByAccount"));
				ТекущийUserID=UserID;
			КонецЕсли;			
			СписокРолейДляИзменения = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип("idm", "ListOfChangeRoles"));
			СписокРолейДляИзменения.RoleID = СтрокаСпискаИзменения.RoleID;
			СписокРолейДляИзменения.EditType = СтрокаСпискаИзменения.EditType;
			СписокИзмененияРолейПоЮзеру.ListOfChangeRoles.Добавить(СписокРолейДляИзменения);
			СписокИзмененияРолейПоЮзеру.ID_User = ТекущийUserID;
		КонецЦикла;
		Если СписокИзмененияРолейПоЮзеру<>Неопределено Тогда
			СписокИзмененияРолейПоЮзерам.ListOfChangeRolesByAccount.Добавить(СписокИзмененияРолейПоЮзеру);
		КонецЕсли;
		Выполнить("Результат = Прокси.SetRolesAccounts(СписокИзмененияРолейПоЮзерам, Er)");
		//Выполнить("Результат = NSI_РаботаСПользователями.ИзменитьСписокРолейПользователейИДМ(СписокИзмененияРолейПоЮзерам, Er)");
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ПолучениеРолейАккаунтов Тогда
		Результат = Ложь;
		UsersID = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип("idm", "UsersID"));
		Для Каждого Строк Из UsersIDTable Цикл
			UsersID.UserID.Добавить(Строк.UserID);
		КонецЦикла;
		Результат = Прокси.GetRolesByAccounts(UsersID, Er);
		РолиИАккаунты.ПолучитьЭлементы().Очистить();
		Если Не Результат = Неопределено Тогда
			Для Каждого АккаунтСРолями Из Результат.RolesByAccounts Цикл
				НоваяСтрокаДерева = РолиИАккаунты.ПолучитьЭлементы().Добавить();
				НоваяСтрокаДерева.UserID = АккаунтСРолями.ID_User;
				Для Каждого Роль Из АккаунтСРолями.ListOfRoles.Roles Цикл
					НоваяСтрокаРоли = НоваяСтрокаДерева.ПолучитьЭлементы().Добавить();
					НоваяСтрокаРоли.RoleID = Роль.RoleID;
					НоваяСтрокаРоли.Name = Роль.Name;
					НоваяСтрокаРоли.BaseID = Роль.BaseID;
					НоваяСтрокаРоли.Description = Роль.Description;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	ЗаполнитьТаблицуErrors(Er);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокАккаунтов(Результат);
	СписокАккаунтов.Очистить();
	Для Каждого Account Из Результат.Account Цикл
		НоваяСтрока = СписокАккаунтов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Account);
		НоваяСтрока.Status = ?(Account.Status[0]="Inactive", Перечисления.NSI_СтатусыУЗ.Неактивна, Перечисления.NSI_СтатусыУЗ.Активна);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокБаз(Результат);
	СписокБаз.Очистить();
	Для Каждого Base Из Результат.Bases Цикл
		НоваяСтрока = СписокБаз.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Base);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРолей(Результат);
	СписокРолей.Очистить();
	Для Каждого Role Из Результат.Roles Цикл
		НоваяСтрока = СписокРолей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Role);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьAccount(Account);
	AccountUserID = Account.UserID;
	AccountFamily = Account.Family;
	AccountName = Account.Name;
	AccountOtchestvo = Account.Otchestvo;
	AccountPosition = Account.Position;
	AccountDivision = Account.Division;
	AccountDateOfChange = Account.DateOfChange;
	AccountStatus = ?(Account.Status[0] = "Active", Перечисления.NSI_СтатусыУЗ.Активна, Перечисления.NSI_СтатусыУЗ.Неактивна);
	AccountID_SMP = Account.ID_SMP;
	AccountLoginAD = Account.LoginAD;
	AccountTechnical = Account.Technical;
КонецПроцедуры
 

&НаСервере
Процедура ЗаполнитьТаблицуErrors(Errors)
	Ошибки.Очистить();
	Если Errors = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Для Каждого Error Из Errors.Error Цикл
		НоваяСтрока = Ошибки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Error);
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ОчиститьНекорректныеРолиВИБ(Команда)
	NSI_РаботаСПользователями.ОчиститьНекорректныеРолиВИБ();
КонецПроцедуры
 
