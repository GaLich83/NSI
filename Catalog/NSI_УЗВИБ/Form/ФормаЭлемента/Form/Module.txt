&НаКлиенте
Перем ПроверятьЗаписьПользователя;
&НаКлиенте
Перем ЗакрыватьОкно;

&НаКлиенте
Процедура УстановитьПароль(Команда)
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ЗавершитьУстановкуПароля", ЭтотОбъект),""); 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьХешПароля(Пароль) Экспорт
    
    Хеш = Новый ХешированиеДанных(ХешФункция.SHA1);
    Хеш.Добавить(Пароль);
    Возврат Base64Строка(Хеш.ХешСумма);
    
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСохраняемоеЗначение(Пароль) Экспорт
    
    Возврат ?(ЗначениеЗаполнено(Пароль),ПолучитьХешПароля(Пароль) + "," + ПолучитьХешПароля(ВРег(Пароль)),"");
    
КонецФункции

&НаКлиенте
Процедура ЗавершитьУстановкуПароля(Результат, ДополнительныеПараметры) Экспорт
	Если Не Результат = Неопределено Тогда
		Объект.СохраняемоеЗначениеПароля = ПолучитьСохраняемоеЗначение(Результат);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Наименование") Тогда
		Объект.Наименование = Параметры.Наименование;
		Объект.ПолноеИмя = Параметры.Наименование;
	КонецЕсли;
	Если Параметры.Свойство("LoginAD") Тогда
		Объект.ПользовательОС = "\\"+Константы.NSI_ПрефиксДоменнойАвторизации.Получить()+"\"+СокрЛП(Параметры.LoginAD);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Если Не ВладелецФормы = Неопределено И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Оповестить("ЗаписьУЗВиб", ВладелецФормы, Объект.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаписыватьНовогоПользователяВВИБ(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВопросЗаписыватьНовогоПользователяВВИБНаСервере();
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		ПроверятьЗаписьПользователя = Истина;
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ЗакрыватьОкно = Истина;
		Записать();
	КонецЕсли;
	Если ЗакрыватьОкно И ЭтаФорма.Открыта() Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВопросЗаписыватьНовогоПользователяВВИБНаСервере()
	Прокси = NSI_МодульПовторногоИспользования.ПолучитьСоединениеПоИмениБазы(Объект.Владелец.ИмяБазы); 
	ДанныеПользователя = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип("nsi_core", "CreateUserInfo"));
	СтруктураФИО = ФизическиеЛицаКлиентСервер.ФамилияИмяОтчество(Объект.ПолноеИмя);
	СтруктураФИО.Свойство("Фамилия", ДанныеПользователя.FirstName);
	СтруктураФИО.Свойство("Отчество", ДанныеПользователя.MiddleName);
	СтруктураФИО.Свойство("Имя", ДанныеПользователя.LastName);
	ДанныеПользователя.LoginEnabled = Объект.АутентификацияСтандартная;
	ДанныеПользователя.Password = Объект.СохраняемоеЗначениеПароля;
	ДанныеПользователя.OSAuthentication = Объект.АутентификацияОС;
	ДанныеПользователя.OSUser = Объект.ПользовательОС;
	ДанныеПользователя.Language = Объект.Язык;
	Ошибка = "";
	СтруктураОтветаXDTO = Прокси.CreateEditUser(ДанныеПользователя, Ошибка);
	Если ЗначениеЗаполнено(Ошибка) Тогда
		ВызватьИсключение Ошибка;
		ПроверятьЗаписьПользователя = Истина;
	Иначе
		СтруктураОтвета = СериализаторXDTO.ПрочитатьXDTO(СтруктураОтветаXDTO);
		ЗаполнитьЗначенияСвойств(Объект, СтруктураОтвета);
		Записать();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПроверятьЗаписьПользователя И Модифицированность Тогда
		Отказ = Истина;
		ПоказатьВопрос(Новый ОписаниеОповещения("ВопросЗаписыватьНовогоПользователяВВИБ",ЭтаФорма), "Обновить данные пользователя во внешней базе?", РежимДиалогаВопрос.ДаНетОтмена);
		ПроверятьЗаписьПользователя = Ложь;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЗакрыватьОкно = Истина;
	Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ЗакрыватьОкно Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

ПроверятьЗаписьПользователя = Истина;
ЗакрыватьОкно = Ложь;

