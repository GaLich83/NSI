&НаКлиенте
Перем ТекущееЛогирование;


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		СписокОтборов.ПолучитьЭлементы().Очистить();
		СписокПараметров.Очистить();
		Возврат;
	КонецЕсли;
	Если ТекущееЛогирование=Элемент.ТекущиеДанные.Ссылка Тогда
		Возврат;
	КонецЕсли;
	ТекущееЛогирование=Элемент.ТекущиеДанные.Ссылка;
	ОбновитьДанныеПоСтроке(ТекущееЛогирование);
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеПоСтроке(ЭлементЛога)
	СписокПараметров.Очистить();
	ДеревоОтборов = РеквизитФормыВЗначение("СписокОтборов");
	ДеревоОтборов.Строки.Очистить();
	ОтборыЛога = ЭлементЛога.СписокОтборовОтчета.Получить();
	ПараметрыЛога = ЭлементЛога.СписокПараметровОтчета.Получить();
	Для каждого Параметр Из ПараметрыЛога Цикл
		НоваяСтрока = СписокПараметров.Добавить();
		НоваяСтрока.Параметр = Параметр.Ключ;
		НоваяСтрока.Значение = Параметр.Значение;
	КонецЦикла;
	Для каждого СтрокаДереваЛога Из ОтборыЛога.Строки Цикл
		НоваяСтрока = ДеревоОтборов.Строки.Добавить();
		Если ЗначениеЗаполнено(СтрокаДереваЛога.Группа) Тогда
			НоваяСтрока.ЛевоеЗначение = СтрокаДереваЛога.Группа;
			ЗаполнитьГруппуЛога(НоваяСтрока, СтрокаДереваЛога);
		Иначе
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДереваЛога);
		КонецЕсли;
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДеревоОтборов, "СписокОтборов");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГруппуЛога(СтрокаГруппы, СтрокаДереваЛога)
	Для каждого Строк Из СтрокаДереваЛога.Строки Цикл
		НоваяСтрока = СтрокаГруппы.Строки.Добавить();
		Если ЗначениеЗаполнено(Строк.Группа) Тогда
			НоваяСтрока.ЛевоеЗначение = Строк.Группа;
			ЗаполнитьГруппуЛога(НоваяСтрока, Строк);
		Иначе
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строк);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТекущееЛогирование = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетВоВнешнейБазе(Команда)
	КОМ = NSI_ОбщиеПроцедурыКлиент.ПолучитьСоединениеСБД(NSI_ОбщиеПроцедуры.ПолучитьСтрокуПодключения(Элементы.Список.ТекущиеДанные.ВнешняяБаза));
	Если КОМ = Неопределено Тогда
		Сообщить("Не удалось подключиться к внешней базе");
		Возврат;
	КонецЕсли;
	//СтрокаПараметров = ПолучитьСериализованныеДанныеХранилища(Элементы.Список.ТекущиеДанные.Ссылка, "ПараметрыФормы");
	//ЧтениеXML = КОМ.NewObject("ЧтениеXML");
	//ЧтениеXML.УстановитьСтроку(СтрокаПараметров); 
	//ПараметрыФормыКлиента = КОМ.СериализаторXDTO.ПрочитатьXDTO(ЧтениеXML);
	Форма = КОМ.ПолучитьФорму(Элементы.Список.ТекущиеДанные.ФормаОтчета);
	СтрокаНастроек = ПолучитьСериализованныеДанныеХранилища(Элементы.Список.ТекущиеДанные.Ссылка, "ХранилищеНеобработанныхНастроек");
	ОбъектНастройки = Вычислить("Форма."+Элементы.Список.ТекущиеДанные.ИмяОбъектаНастройки);
	Выполнить("КОМ.NSI_Логирование.УстановитьНастройкиЭлементаФормы(Форма."+Элементы.Список.ТекущиеДанные.ИмяОбъектаНастройки+", СтрокаНастроек)"); 
	КОМ.ОткрытьФорму(Форма);
	Если Элементы.Список.ТекущиеДанные.КомандаПриОткрытии = "СкомпоноватьРезультат" Тогда
		Форма.СкомпоноватьРезультат();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСериализованныеДанныеХранилища(Ссылка, ИмяРеквизитаХранилища)
	Возврат Ссылка[ИмяРеквизитаХранилища].Получить();
КонецФункции

