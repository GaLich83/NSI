Функция ПроверитьДоступностьСервиса(ВнешнийСервис)
	ДоступностьСервиса = Ложь;
	// Прописываем для каждого вида сервиса свой вызов проверки доступности
	ДоступностьСервиса = Истина;
	Возврат ДоступностьСервиса;
КонецФункции

Функция ПолучитьПодключениеКСервису(ВнешнийСервис) 
	Подключение = Неопределено;
	// Прописываем для каждого вида сервиса свое получение подключения
	Возврат Подключение;
КонецФункции

Функция ВыполнитьМетодСервиса(Сервис, Метод, СтруктураПараметров) Экспорт
	Параметры = СтруктураПараметров;
	Подключение = ПолучитьПодключениеКСервису(Сервис);
	ДанныеМетода = Сервис.МетодыСервисов.Найти(Метод, "ИмяМетода");
	Если ДанныеМетода = Неопределено Тогда
		ВызватьИсключение "Не найден метод сервиса";
	КонецЕсли;
	СписокФайлов = NSI_РаботаСМастерДаннымиСервер.ПрочитатьОбъектИзXML(ДанныеМетода.МакетыИФайлыМетода);
	Файлы = Новый Структура;
	Для Каждого СтрокаФайла Из СписокФайлов Цикл
		Файлы.Вставить(СтрокаФайла.СимвольноеИмя, Base64Значение(СтрокаФайла.ДанныеФайла));
	КонецЦикла;
	Результат = Неопределено;
	ВыполняемыйКод = ДанныеМетода.ПроцедураВызоваМетода;
	ВыполняемыйКод = СтрЗаменить(ВыполняемыйКод, "ФункцияТиповогоНСИ", "Справочники.NSI_СписокВнешнихСервисов.ФункцияТиповогоСервисаНСИ");
	Выполнить(ВыполняемыйКод);
	Возврат Результат;
КонецФункции

Функция ФункцияТиповогоСервисаНСИ(Сервис, ИмяФункции, МассивПараметров) Экспорт
	Если Сервис.ЕстьТиповойСервисNSI Тогда
		Ответ = NSI_ОбщиеПроцедуры.ВыполнитьПроизвольнуюФункциюВБазеХранилище(Сервис.ОсновнаяВИБ.ИмяБазы, ИмяФункции, Новый ХранилищеЗначения(МассивПараметров));
		Если ТипЗнч(Ответ)=Тип("ОбъектXDTO") Тогда
			ЗначениеОтвет = СериализаторXDTO.ПрочитатьXDTO();
		Иначе
			ЗначениеОтвет = Ответ;
		КонецЕсли;
		Если ТипЗнч(ЗначениеОтвет)=Тип("ХранилищеЗначения") Тогда
			ЗначениеОтвет = ЗначениеОтвет.Получить();
		КонецЕсли;
		Возврат ЗначениеОтвет;
	Иначе
		ВызватьИсключение "Данный сервис не включает в себя типовой сервис НСИ.";
	КонецЕсли;
КонецФункции



