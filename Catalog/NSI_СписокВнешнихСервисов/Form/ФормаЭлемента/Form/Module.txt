&НаКлиенте
Перем ПредыдущаяСтрока;


&НаКлиенте
Процедура МетодыСервисовПриАктивизацииСтроки(Элемент)
	Если Не Элемент.ТекущиеДанные = Неопределено Тогда
		Если Не ПредыдущаяСтрока=Неопределено Тогда
			ОбновитьДанныеМетодаНаКлиенте(ПредыдущаяСтрока);
		КонецЕсли;
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ТекущиеДанные);
		ПрочитатьДанныеМетода();
		ПредыдущаяСтрока = ТекущиеДанные;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеМетодаНаКлиенте(СтрокаОбновления=Неопределено)
	Если СтрокаОбновления = Неопределено Тогда
		СтрокаОбновления = Элементы.МетодыСервисов.ТекущиеДанные;
	КонецЕсли;
	Если Не СтрокаОбновления = Неопределено Тогда
		ОбновитьТекущуюСтрокуМетода();
		ЗаполнитьЗначенияСвойств(СтрокаОбновления, ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТекущуюСтрокуМетода()
	ПараметрыМетода = NSI_РаботаСМастерДаннымиСервер.ЗаписатьОбъектВXML(СписокПараметровМетода.Выгрузить());
	МакетыИФайлыМетода = NSI_РаботаСМастерДаннымиСервер.ЗаписатьОбъектВXML(СписокФайлов.Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеМетода()
	Если ЗначениеЗаполнено(ПараметрыМетода) Тогда
		СписокПараметровМетода.Загрузить(NSI_РаботаСМастерДаннымиСервер.ПрочитатьОбъектИзXML(ПараметрыМетода));		
	Иначе
		СписокПараметровМетода.Очистить();
	КонецЕсли;
	Если ЗначениеЗаполнено(МакетыИФайлыМетода) Тогда
		СписокФайлов.Загрузить(NSI_РаботаСМастерДаннымиСервер.ПрочитатьОбъектИзXML(МакетыИФайлыМетода));
	Иначе
		СписокФайлов.Очистить();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура МетодыСервисовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ОбновитьДанныеМетодаНаКлиенте();
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьФайл(Команда)
	Оповещение = Новый ОписаниеОповещения("ОбработатьВыборФайлаДляДобавления", ЭтаФорма);
	НачатьПомещениеФайла(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайлаДляДобавления(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если Результат Тогда
		ПомещенныйФайл = ПолучитьИзВременногоХранилища(Адрес);
		НоваяСтрока = СписокФайлов.Добавить();
		НоваяСтрока.СимвольноеИмя = "Файл"+Формат(СписокФайлов.Количество()+1,"ЧГ=");
		НоваяСтрока.ДанныеФайла = Base64Строка(ПомещенныйФайл);
		НоваяСтрока.Расширение = ВзаимодействияКлиентСервер.ПолучитьРасширениеФайла(ВыбранноеИмяФайла);
		ИмяКаталога = "";
		ИмяФайла = "";
		ВзаимодействияКлиентСервер.ПолучитьКаталогИИмяФайла(ВыбранноеИмяФайла, ИмяКаталога, ИмяФайла);
		Если ЗначениеЗаполнено(ИмяФайла) Тогда
			НоваяСтрока.НазваниеФайла = ИмяФайла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияКаталогаВременныхФайлов(ИмяКаталога, ДополнительныеПараметры) Экспорт
	СтрокаФайла = СписокФайлов[ДополнительныеПараметры.ВыбраннаяСтрока];
	ВыбранныйФайл = Base64Значение(СтрокаФайла.ДанныеФайла);
	ИмяВременногоФайла = ИмяКаталога + СтрокаФайла.НазваниеФайла;
	ВыбранныйФайл.Записать(ИмяВременногоФайла);
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПриложения", ЭтаФорма), ИмяВременногоФайла, , Истина);
КонецПроцедуры

Процедура ПослеЗапускаПриложения(КодВозврата, ДополнительныеПараметры) Экспорт
КонецПроцедуры


&НаКлиенте
Процедура СписокФайловИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ПослеПолученияКаталогаВременныхФайлов", ЭтаФорма, Новый Структура("ВыбраннаяСтрока", Элементы.СписокФайлов.ТекущаяСтрока)); 
	НачатьПолучениеКаталогаВременныхФайлов(Оповещение);
КонецПроцедуры

