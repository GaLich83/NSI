&НаКлиенте
Перем ТекущаяСсылка;

&НаКлиенте
Процедура ПоказатьСтруктуруДо(Команда)
	ОчиститьСообщения();
	ПоказатьСтруктуруНаСервере("До", Элементы.Список.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПоказатьСтруктуруНаСервере(ЧтоОтображать="До", Ссылка)
	Если ЧтоОтображать = "До" Тогда
		Хранилище = Ссылка.ДанныеДоИзменения;
	ИначеЕсли ЧтоОтображать = "После" Тогда
		Хранилище = Ссылка.ДанныеПослеИзменения;
	Иначе
		Возврат;
	КонецЕсли;
	Таблица = Хранилище.Получить();
	Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
		Для Каждого Реквизит Из Таблица Цикл
			Если ТипЗнч(Реквизит.Значение) = Тип("Массив") Тогда
				Ц = 0;
				Сообщить(Реквизит.Синоним+" = ТЧ {");
				Для Каждого Строк Из Реквизит.Значение Цикл
					Сообщить("  ["+Ц+"]");
					Если ТипЗнч(Строк) = Тип("ТаблицаЗначений") Тогда
						Для Каждого СтрокРеквизит Из Строк Цикл
							Сообщить("    "+СтрокРеквизит.Синоним+" = "+СтрокРеквизит.Значение);
						КонецЦикла;
					КонецЕсли;
					Ц = Ц+1;
				КонецЦикла;
				Сообщить("}");
			Иначе
				Сообщить(Реквизит.Синоним+" = "+Строка(Реквизит.Значение));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПоказатьСтруктуруИзмененийНаСервере(Ссылка)
	Хранилище = Ссылка.СтруктураИзменений;  
	Таблица = Хранилище.Получить();
	Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
		Для Каждого Реквизит Из Таблица Цикл
			Если Реквизит.ЭтоТаблица Тогда
				Ц = 0;
				Сообщить(Реквизит.Синоним+" = ТЧ {");
				Для Каждого Строк Из Реквизит.До Цикл
					Если ТипЗнч(Строк.Значение) = Тип("ТаблицаЗначений") Тогда
						Сообщить("  "+Строк.Синоним);
						Для Каждого СтрокРеквизит Из Строк.Значение Цикл
							Сообщить("    "+СтрокРеквизит.Синоним+". До: "+Строка(СтрокРеквизит.До)+", после: "+Строка(СтрокРеквизит.После));
						КонецЦикла;
					КонецЕсли;
					Ц = Ц+1;
				КонецЦикла;
				Сообщить("}");
			Иначе
				Сообщить(Реквизит.Синоним+". До: "+Строка(Реквизит.До)+", после: "+Строка(Реквизит.После));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьСтруктуруПосле(Команда)
	ОчиститьСообщения();
	ПоказатьСтруктуруНаСервере("После", Элементы.Список.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтруктуруИзменений(Команда)
	ОчиститьСообщения();
	ПоказатьСтруктуруИзмененийНаСервере(Элементы.Список.ТекущиеДанные.Ссылка);	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтруктуруИзмененийНаСервере(Ссылка)
	Хранилище = Ссылка.СтруктураИзменений;  
	Таблица = Хранилище.Получить();
	ДЗ = Новый ДеревоЗначений;
	ДЗ.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	ДЗ.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка"));
	ДЗ.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДЗ.Колонки.Добавить("До", Новый ОписаниеТипов("Строка"));
	ДЗ.Колонки.Добавить("После", Новый ОписаниеТипов("Строка"));
	ДЗ.Колонки.Добавить("Значение", Новый ОписаниеТипов("Строка"));
	Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
		Для Каждого Реквизит Из Таблица Цикл
			Если Реквизит.ЭтоТаблица Тогда
				Ц = 0;
				СтрокаДерева = ДЗ.Строки.Добавить();
				СтрокаДерева.Синоним = Реквизит.Синоним;
				СтрокаДерева.ИндексКартинки = 2;
				Для Каждого Строк Из Реквизит.До Цикл
					Если ТипЗнч(Строк.Значение) = Тип("ТаблицаЗначений") Тогда
						СтрокаТаблицы = СтрокаДерева.Строки.Добавить();
						СтрокаТаблицы.Синоним = Строк.Синоним;
						СтрокаТаблицы.ИндексКартинки = 1;
						Для Каждого СтрокРеквизит Из Строк.Значение Цикл
							СтрокаРеквизита = СтрокаТаблицы.Строки.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаРеквизита, СтрокРеквизит);
						КонецЦикла;
					КонецЕсли;
					Ц = Ц+1;
				КонецЦикла;
			Иначе
				СтрокаДерева = ДЗ.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДерева, Реквизит);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	ЗначениеВРеквизитФормы(ДЗ, "ДеревоИзменений");
КонецПроцедуры


&НаСервере
Процедура СформироватьСтруктуруДанныхНаСервере(Ссылка, ЧтоОтображать="До")
	Если ЧтоОтображать = "До" Тогда
		Хранилище = Ссылка.ДанныеДоИзменения;
	ИначеЕсли ЧтоОтображать = "После" Тогда
		Хранилище = Ссылка.ДанныеПослеИзменения;
	Иначе
		Возврат;
	КонецЕсли;
	ДЗ = Новый ДеревоЗначений;
	ДЗ.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	ДЗ.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка"));
	ДЗ.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДЗ.Колонки.Добавить("До", Новый ОписаниеТипов("Строка"));
	ДЗ.Колонки.Добавить("После", Новый ОписаниеТипов("Строка"));
	ДЗ.Колонки.Добавить("Значение", Новый ОписаниеТипов("Строка"));
	Таблица = Хранилище.Получить();
	Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
		Для Каждого Реквизит Из Таблица Цикл
			Если ТипЗнч(Реквизит.Значение) = Тип("Массив") Тогда
				Ц = 0;
				СтрокаДерева = ДЗ.Строки.Добавить();
				СтрокаДерева.Синоним = Реквизит.Синоним;
				СтрокаДерева.ИндексКартинки = 2;
				Для Каждого Строк Из Реквизит.Значение Цикл
					СтрокаТаблицы = СтрокаДерева.Строки.Добавить();
					СтрокаТаблицы.Синоним = "  ["+Ц+"]";
					СтрокаТаблицы.ИндексКартинки = 1;
					//Сообщить("  ["+Ц+"]");
					Если ТипЗнч(Строк) = Тип("ТаблицаЗначений") Тогда
						Для Каждого СтрокРеквизит Из Строк Цикл
							СтрокаРеквизита = СтрокаТаблицы.Строки.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаРеквизита, СтрокРеквизит);
							//Сообщить("    "+СтрокРеквизит.Синоним+" = "+СтрокРеквизит.Значение);
						КонецЦикла;
					КонецЕсли;
					Ц = Ц+1;
				КонецЦикла;
				//Сообщить("}");
			Иначе
				СтрокаДерева = ДЗ.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДерева, Реквизит);
				//Сообщить(Реквизит.Синоним+" = "+Строка(Реквизит.Значение));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ЗначениеВРеквизитФормы(ДЗ, "ДеревоИзменений");
КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Элементы.Список.ТекущиеДанные.Ссылка=ТекущаяСсылка Тогда
		Возврат;
	КонецЕсли;
	ТекущаяСсылка = Элементы.Список.ТекущиеДанные.Ссылка;
	ПодключитьОбработчикОжидания("ОбновлениеДерева",0.2, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеДерева()
	Если ВидДанных = 0 Тогда
		СформироватьСтруктуруИзмененийНаСервере(ТекущаяСсылка);
		Элементы.ДеревоИзмененийДо.Видимость = Истина;
		Элементы.ДеревоИзмененийПосле.Видимость = Истина;
		Элементы.ДеревоИзмененийЗначение.Видимость = Ложь;
	Иначе
		СформироватьСтруктуруДанныхНаСервере(ТекущаяСсылка, ?(ВидДанных=1, "До", "После"));
		Элементы.ДеревоИзмененийДо.Видимость = Ложь;
		Элементы.ДеревоИзмененийПосле.Видимость = Ложь;
		Элементы.ДеревоИзмененийЗначение.Видимость = Истина;
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ВидДанныхПриИзменении(Элемент)
	ОбновлениеДерева();
КонецПроцедуры

