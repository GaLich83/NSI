
&НаКлиенте
Процедура ПолучитьПоФИОДанныеИзСМП(Команда)
	ПолучитьПоФИОДанныеИзСМПНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьПоФИОДанныеИзСМПНаСервере()
	ТекстЗапроса = "select
	|		un.ID
	|	, un.LASTNAME+' '+un.FIRSTNAME+' '+un.MIDDLENAME as ФИО
	|	,ad.ADUNIQUENAME
	|	,un.LASTNAME
	|	,un.FIRSTNAME
	|	,un.MIDDLENAME
	|	,un.POST_NAME
	|	,un.DIVISION_NAME
	|	,div.HIERARNAME		
	|		from  dbo.view_units un
	|			left join dbo.VIEW_DIVISIONS div on un.DIVISION_ID=div.ID
	|			left join dbo.VIEW_UNIT_AD ad on un.uid=ad.UID
	|			where (un.DATE_END is null or un.DATE_END>GetDate()) and un.LASTNAME+' '+un.FIRSTNAME+' '+un.MIDDLENAME = '"+СокрЛП(Объект.Наименование)+"'
	|					and un.UNIT_IN_DECRET = 0";
	Таблица = NSI_РаботаСАДО.ВыполнитьЗапрос("Provider=SQLOLEDB; Data Source=172.16.5.221; Initial Catalog=SMP_PUBLISHER2; User ID=IdmDeveloper; Password=@!DevIdm34",ТекстЗапроса,,,Истина);
	Если Таблица.Количество()>1 Тогда
		Сообщить("Есть полные однофамильцы");
	ИначеЕсли Таблица.Количество()>0 Тогда
		Объект.Фамилия = Таблица[0].LASTNAME;
		Объект.Имя = Таблица[0].FIRSTNAME;
		Объект.Отчество = Таблица[0].MIDDLENAME;
		Объект.Должность = Таблица[0].POST_NAME;
		Объект.Подразделение = Таблица[0].DIVISION_NAME;
		Объект.ID_SMP = Таблица[0].ID;
		Объект.LoginAD = Таблица[0].ADUNIQUENAME;
	Иначе
		Сообщить("Учетная запись в базе СМП не найдена");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеПоLoginAD(Команда)
	ПолучитьДанныеПоLoginADНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПоLoginADНаСервере()
	ТекстЗапроса = "select
	|		un.ID
	|	, un.LASTNAME+' '+un.FIRSTNAME+' '+un.MIDDLENAME as ФИО
	|	,ad.ADUNIQUENAME
	|	,un.LASTNAME
	|	,un.FIRSTNAME
	|	,un.MIDDLENAME
	|	,un.POST_NAME
	|	,un.DIVISION_NAME
	|	,div.HIERARNAME		
	|		from  dbo.view_units un
	|			left join dbo.VIEW_DIVISIONS div on un.DIVISION_ID=div.ID
	|			left join dbo.VIEW_UNIT_AD ad on un.uid=ad.UID
	|			where ad.ADUNIQUENAME = '"+СокрЛП(Объект.LoginAD)+"'";
	Таблица = NSI_РаботаСАДО.ВыполнитьЗапрос("Provider=SQLOLEDB; Data Source=172.16.5.221; Initial Catalog=SMP_PUBLISHER2; User ID=IdmDeveloper; Password=@!DevIdm34",ТекстЗапроса,,,Истина);
	Если Таблица.Количество()>1 Тогда
		Сообщить("Есть полные однофамильцы");
	ИначеЕсли Таблица.Количество()>0 Тогда
		Объект.Фамилия = Таблица[0].LASTNAME;
		Объект.Имя = Таблица[0].FIRSTNAME;
		Объект.Отчество = Таблица[0].MIDDLENAME;
		Объект.Должность = Таблица[0].POST_NAME;
		Объект.Подразделение = Таблица[0].DIVISION_NAME;
		Объект.ID_SMP = Таблица[0].ID;
	Иначе
		Сообщить("Учетная запись в базе СМП не найдена");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРолиВИБ(Команда)
	Записать();
	ОбновитьРолиВИБНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьРолиВИБНаСервере()
	NSI_РаботаСПользователями.ОбновитьДанныеУЗВИБПоУЗИДМ(Новый Структура("УЗИДМ, ОчищатьНекорректныеРоли", Объект.Ссылка, Истина));
КонецПроцедуры


&НаКлиенте
Процедура СоздатьПользователяВИБ(Команда)
	ОткрытьФорму("Справочник.NSI_СписокВИБ.ФормаВыбора", , ЭтаФорма, "ВыборИБ", ВариантОткрытияОкна.ОтдельноеОкно, , Новый ОписаниеОповещения("ОкончаниеВыбораИБДляСозданияПользователя", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбораИБДляСозданияПользователя(РезультатВыбора, ДополнительныеПараметры) Экспорт
	Если РезультатВыбора = Неопределено Тогда Возврат; КонецЕсли;
	СтруктураПараметров = Новый Структура("ЗначенияЗаполнения, Наименование", Новый Структура("Владелец", РезультатВыбора), Объект.Наименование);
	Если ЗначениеЗаполнено(Объект.LoginAD) Тогда
		СтруктураПараметров.Вставить("LoginAD", Объект.LoginAD);
	КонецЕсли;
	ОткрытьФорму("Справочник.NSI_УЗВИБ.ФормаОбъекта", СтруктураПараметров, ЭтаФорма, "Создание пользователя ВИБ", ВариантОткрытияОкна.ОтдельноеОкно, , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗаписьУЗВиб" И Параметр = ЭтаФорма Тогда
		СписокСтрок = Объект.УЗВИБ.НайтиСтроки(Новый Структура("УЗВИБ", Источник));
		Если СписокСтрок.Количество()=0 Тогда
			НоваяСтрока = Объект.УЗВИБ.Добавить();
			НоваяСтрока.УЗВИБ = Источник;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьРолиIDM(Команда)
	ПолучитьРолиIDMНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПолучитьРолиIDMНаСервере()
	Для Каждого СтрокаВИБ Из Объект.УЗВИБ Цикл
		Попытка
			БазаВИБ = СтрокаВИБ.УЗВИБ.Владелец;
			Connector = NSI_МодульПовторногоИспользования.ПолучитьСоединениеПоИмениБазы(БазаВИБ.ИмяБазы);
			СтруктураРолейХранилище = Connector.GetUserRolesAndGroup(СтрокаВИБ.УЗВИБ.Наименование, СтрокаВИБ.УЗВИБ.ИДПользователя);
			СтруктураРолей = СтруктураРолейХранилище.Получить();
			ТаблицаГруппДоступа = СтруктураРолей.ГруппыДоступа;
			Если БазаВИБ.ВидРолейИспользуемыйВИБ = Перечисления.NSI_ВидРолиВИБ.ГруппаДоступа Тогда
				СтрокиИспользуемыхГрупп = ТаблицаГруппДоступа.НайтиСтроки(Новый Структура("ИмяСправочникаГрупп", "ГруппыДоступа"));
				Для Каждого СтрокаДоступа Из СтрокиИспользуемыхГрупп Цикл
					Если СтрокаДоступа.ИмяТЧГрупп="Пользователи" Тогда
						РольВИБ = Справочники.NSI_ГруппыДоступаВИБ.НайтиПоРеквизиту("СсылкаВИБ", СтрокаДоступа.ID, , БазаВИБ);
						Если ЗначениеЗаполнено(РольВИБ) Тогда
							ЗапросРолиИДМ = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
							                       |	РолиIDMРолиВИБ.Ссылка
							                       |ИЗ
							                       |	Справочник.NSI_РолиIDM.РолиВИБ КАК РолиIDMРолиВИБ
							                       |ГДЕ
							                       |	РолиIDMРолиВИБ.РольВИБ = &РольВИБ");
							ЗапросРолиИДМ.УстановитьПараметр("РольВИБ", РольВИБ);
							Выборка = ЗапросРолиИДМ.Выполнить().Выбрать();
							Если Выборка.Следующий() Тогда
								РольИДМ = Выборка.Ссылка;
							Иначе
								// Тут необходимо создавать новую роль IDM, т.к. роль ВИБ есть, а в Ролях IDM такой нет.
							КонецЕсли;
						Иначе
							// Тут необходимо создавать новую роль ВИБ, т.к. все используемые роли ВИБ болжны быть загружены в базу. + Создать роль IDM
						КонецЕсли;
						// Ищем роль в справочнике, проверка нужна, независимо от того должна быть эта роль или нет.
						МассивНайденыхСтрокСРолями = Объект.РолиIDM.НайтиСтроки(Новый Структура("РольIDM", РольИДМ));
						Если МассивНайденыхСтрокСРолями.Количество()>1 Тогда
							Для Ц = 1 По МассивНайденыхСтрокСРолями.Количество()-1 Цикл
								Объект.РолиIDM.Удалить(МассивНайденыхСтрокСРолями[Ц]);
							КонецЦикла;
						КонецЕсли;
						РольИДМНайдена = МассивНайденыхСтрокСРолями.Количество()>0;
						Если СтрокаДоступа.Использование Тогда
							// Если роль не нашли - добавляем.
							Если Не РольИДМНайдена Тогда
								НоваяСтрока = Объект.РолиIDM.Добавить();
								НоваяСтрока.РольIDM = РольИДМ;
							КонецЕсли;
						Иначе
							// Если роль найдена - удаляем
							Если РольИДМНайдена Тогда
								Объект.РолиIDM.Удалить(МассивНайденыхСтрокСРолями[0]);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли БазаВИБ.ВидРолейИспользуемыйВИБ = Перечисления.NSI_ВидРолиВИБ.ГруппаПользователей Тогда
				СтрокиИспользуемыхГрупп = ТаблицаГруппДоступа.НайтиСтроки(Новый Структура("ИмяСправочникаГрупп", "ГруппыПользователей"));
				Для Каждого СтрокаДоступа Из СтрокиИспользуемыхГрупп Цикл
					Если СтрокаДоступа.ИмяТЧГрупп="Состав" Тогда
						РольВИБ = Справочники.NSI_ГруппыДоступаВИБ.НайтиПоРеквизиту("СсылкаВИБ", СтрокаДоступа.ID, , БазаВИБ);
						Если ЗначениеЗаполнено(РольВИБ) Тогда
							ЗапросРолиИДМ = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
							                       |	РолиIDMРолиВИБ.Ссылка
							                       |ИЗ
							                       |	Справочник.NSI_РолиIDM.РолиВИБ КАК РолиIDMРолиВИБ
							                       |ГДЕ
							                       |	РолиIDMРолиВИБ.РольВИБ = &РольВИБ");
							ЗапросРолиИДМ.УстановитьПараметр("РольВИБ", РольВИБ);
							Выборка = ЗапросРолиИДМ.Выполнить().Выбрать();
							Если Выборка.Следующий() Тогда
								РольИДМ = Выборка.Ссылка;
							Иначе
								// Тут необходимо создавать новую роль IDM, т.к. роль ВИБ есть, а в Ролях IDM такой нет.
							КонецЕсли;
						Иначе
							// Тут необходимо создавать новую роль ВИБ, т.к. все используемые роли ВИБ болжны быть загружены в базу. + Создать роль IDM
						КонецЕсли;
						// Ищем роль в справочнике, проверка нужна, независимо от того должна быть эта роль или нет.
						МассивНайденыхСтрокСРолями = Объект.NSI_РолиIDM.НайтиСтроки(Новый Структура("РольIDM", РольИДМ));
						Если МассивНайденыхСтрокСРолями.Количество()>1 Тогда
							Для Ц = 1 По МассивНайденыхСтрокСРолями.Количество()-1 Цикл
								Объект.РолиIDM.Удалить(МассивНайденыхСтрокСРолями[Ц]);
							КонецЦикла;
						КонецЕсли;
						РольИДМНайдена = МассивНайденыхСтрокСРолями.Количество()>0;
						Если СтрокаДоступа.Использование Тогда
							// Если роль не нашли - добавляем.
							Если Не РольИДМНайдена Тогда
								НоваяСтрока = Объект.РолиIDM.Добавить();
								НоваяСтрока.РольIDM = РольИДМ;
							КонецЕсли;
						Иначе
							// Если роль найдена - удаляем
							Если РольИДМНайдена Тогда
								Объект.РолиIDM.Удалить(МассивНайденыхСтрокСРолями[0]);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли БазаВИБ.ВидРолейИспользуемыйВИБ = Перечисления.NSI_ВидРолиВИБ.Роль Тогда
				// Добавить обработку по ролям пользователя
			КонецЕсли;
		Исключение
			Сообщить("Ошибка при обработке УЗ ВИБ "+СтрокаВИБ.УЗВИБ+". "+ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

