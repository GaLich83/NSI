
Функция GetDataByTokenGET(Запрос)
	ТекстОтвета = "<html><body><div><strong>Описание метода</strong></div>
	|<div>Метод GET - возвращает данную справку по методу сервиса.</div>
	|<div>Метод POST позволяет получить большой набор данных, в случае, когда методы веб-сервиса MDM вернули в ответе параметр BigDataToken. Не требует передачи тела запроса.</div>
	|<div>Тело ответа содержит ответ в формате <a href=""http://1cmsfo/mdm_helponline/arrayofbigdata_mdm_.html"">ArrayOfBigData(mdm)</a>.</div>
	|<div>Подробное описание классов можно найти <a href=""http://1cmsfo/mdm_helponline/"">здесь</a>.</div>
	|</body></html>";
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.УстановитьТелоИзСтроки(ТекстОтвета, КодировкаТекста.UTF8);
	ОтветСервиса.Заголовки.Вставить("Content-Type: text/html;");
	Возврат ОтветСервиса;
КонецФункции

Функция GetMasterDataPOST(Запрос)
	SourceSystem = Запрос.ПараметрыURL["SourceSystem"];
	MasterDataName = Запрос.ПараметрыURL["MasterDataName"];
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
	SearchParameters = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ФабрикаXDTO.Тип("mdm", "FindStructure"));
	ОтветXDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("mdm", "GetMasterDataResponse"));
	ОтветXDTO.DataResponse = NSI_РаботаСМастерДаннымиПоиск.НайтиДанныеПоУсловиюXDTO(MasterDataName, SearchParameters);
	Если Не ТипЗнч(ОтветXDTO.DataResponse.MasterData) = Тип("СписокXDTO") Тогда
		NSI_РаботаСМастерДаннымиРаботаСВнешнимиСистемами.ВернутьОшибкуВебСервиса(ОтветXDTO.Errors, "DataNotFound", "По данному условию не найдено мастер-данных.");
	КонецЕсли;
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку();
	Запись.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(Запись, ОтветXDTO);
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.УстановитьТелоИзСтроки(Запись.Закрыть(), КодировкаТекста.UTF8);
	Возврат ОтветСервиса;
КонецФункции

Функция GetMasterDataByKeyPOST(Запрос)
	SourceSystem = Запрос.ПараметрыURL["SourceSystem"];
	MasterDataName = Запрос.ПараметрыURL["MasterDataName"];
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
	Keys = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ФабрикаXDTO.Тип("mdm", "Keys"));
	ОтветXDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("mdm", "GetMasterDataByKeyResponse"));
	Попытка
		СоответствиеКлюча = Новый Соответствие;
		Для Каждого Ключ Из Keys.Key Цикл
			СоответствиеКлюча.Вставить(Ключ.Key, Ключ.Value);
		КонецЦикла;
		МастерДанные = NSI_РаботаСМастерДаннымиПоиск.НайтиМастерДанныеПоКлючу(СоответствиеКлюча);
		Если МастерДанные = Неопределено Тогда
			NSI_РаботаСМастерДаннымиРаботаСВнешнимиСистемами.ВернутьОшибкуВебСервиса(ОтветXDTO.Errors, "DataNotFound", "По данному ключу не найдено мастер-данных.");
		Иначе
			ОписаниеМастерДанных = NSI_РаботаСМастерДаннымиПоиск.ПолучитьМастерДанныеПоСсылке(МастерДанные);
			ОтветXDTO.DataResponse = ОписаниеМастерДанных;
		КонецЕсли;			
	Исключение
		NSI_РаботаСМастерДаннымиРаботаСВнешнимиСистемами.ВернутьОшибкуВебСервиса(ОтветXDTO.Errors, "UnspecifiedError", ОписаниеОшибки());
	КонецПопытки;
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку();
	Запись.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(Запись, ОтветXDTO);
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.УстановитьТелоИзСтроки(Запись.Закрыть());
	Возврат ОтветСервиса;
КонецФункции

Функция GetMasterDataGET(Запрос)
	ТекстОтвета = "<html><body><div><strong>Описание методов</strong></div>
	|<div>Метод GET - возвращает данную справку по методу сервиса.</div>
	|<div>Метод POST позволяет получить данные, найденные по условию, переданному в теле POST-запроса. Формат xml передаваемого запроса должен содержать тип <a href=""http://1cmsfo/mdm_helponline/findstructure_mdm_.html"">FindStructure(mdm)</a>.</div>
	|<div>Тело ответа содержит ответ в формате <a href=""http://1cmsfo/mdm_helponline/getmasterdata_2.html"">GetMasterDataResponse(mdm)</a>.</div>
	|<div>Подробное описание классов можно найти <a href=""http://1cmsfo/mdm_helponline/"">здесь</a>.</div>
	|</body></html>";
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.Заголовки.Вставить("Content-Type: text/html;");
	ОтветСервиса.УстановитьТелоИзСтроки(ТекстОтвета, КодировкаТекста.UTF8);
	Возврат ОтветСервиса;
КонецФункции

Функция GetMasterDataByKeyGET(Запрос)
	ТекстОтвета = "<html><body><div><strong>Описание метода</strong></div>
	|<div>Метод GET - возвращает данную справку по методу сервиса.</div>
	|<div>Метод POST позволяет получить данные, найденные по ключу данных, переданному в теле запроса. Формат xml передаваемого запроса должен содержать тип <a href=""http://1cmsfo/mdm_helponline/keys__mdm_.html"">Keys(mdm)</a>.</div>
	|<div>Тело ответа содержит ответ в формате <a href=""http://1cmsfo/mdm_helponline/getmasterdatabykeyresponse__mdm_.html"">GetMasterDataByKeyResponse(mdm)</a>.</div>
	|<div>Подробное описание классов можно найти <a href=""http://1cmsfo/mdm_helponline/"">здесь</a>.</div>
	|</body></html>";
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.УстановитьТелоИзСтроки(ТекстОтвета);
	ОтветСервиса.Заголовки.Вставить("Content-Type: text/html;");
	Возврат ОтветСервиса;
КонецФункции

Функция GetMasterDataByMethodPOST(Запрос)
	SourceSystem = Запрос.ПараметрыURL["SourceSystem"];
	MethodName = Запрос.ПараметрыURL["MethodName"];
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
	MethodParameters = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ФабрикаXDTO.Тип("mdm", "Keys"));
	Параметры = Новый Структура;
	Для Каждого Параметр Из MethodParameters.Key Цикл
		Параметры.Вставить(Параметр.Key, Параметр.Value);
	КонецЦикла;
	ОтветXDTO = NSI_РаботаСМастерДаннымиРаботаСВнешнимиСистемами.ВыполнитьВызовМетодаОбработкиДанныхВнешнейСистемы(SourceSystem, MethodName, Параметры);		
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку();
	Запись.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(Запись, ОтветXDTO);
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.УстановитьТелоИзСтроки(Запись.Закрыть());
	Возврат ОтветСервиса;
КонецФункции


Функция GetMasterDataByMethodGET(Запрос)
	ТекстОтвета = "<html><body><div><strong>Описание метода</strong></div>
	|<div>Метод GET - возвращает данную справку по методу сервиса.</div>
	|<div>Метод POST позволяет получить данные, возвращаемому методом, выполняемым с параметрами, переданных в теле запроса. Формат xml передаваемого запроса должен содержать тип <a href=""http://1cmsfo/mdm_helponline/keys__mdm_.html"">Keys(mdm)</a>.</div>
	|<div>Тело ответа содержит ответ в формате <a href=""http://1cmsfo/mdm_helponline/getmasterdatabymethodresponse__mdm_.html"">GetMasterDataByMethodResponse(mdm)</a>.</div>
	|<div>Подробное описание классов можно найти <a href=""http://1cmsfo/mdm_helponline/"">здесь</a>.</div>
	|</body></html>";
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.УстановитьТелоИзСтроки(ТекстОтвета);
	ОтветСервиса.Заголовки.Вставить("Content-Type: text/html;");
	Возврат ОтветСервиса;
КонецФункции


Функция GetMasterDataByGUIDGET(Запрос)
	ТекстОтвета = "<html><body><div><strong>Описание метода</strong></div>
	|<div>Метод GET - возвращает данную справку по методу сервиса.</div>
	|<div>Метод POST позволяет получить мастер-данные с указанным в строке GUID. Передачи тела запроса не требуется.</div>
	|<div>Тело ответа содержит ответ в формате <a href=""http://1cmsfo/mdm_helponline/getmasterdatabykeyresponse__mdm_.html"">GetMasterDataByKeyResponse(mdm)</a>.</div>
	|<div>Подробное описание классов можно найти <a href=""http://1cmsfo/mdm_helponline/"">здесь</a>.</div>
	|</body></html>";
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.УстановитьТелоИзСтроки(ТекстОтвета);
	ОтветСервиса.Заголовки.Вставить("Content-Type: text/html;");
	Возврат ОтветСервиса;	
КонецФункции

Функция GetMasterDataByGUIDPOST(Запрос)
	SourceSystem = Запрос.ПараметрыURL["SourceSystem"];
	GUID = Запрос.ПараметрыURL["GUID"];
	ОтветXDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("mdm", "GetMasterDataByKeyResponse"));
	МастерДанные = Справочники.NSI_МастерДанные.ПолучитьСсылку(Новый УникальныйИдентификатор(GUID));
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	NSI_ХэшиКлючейМастерДанных.МастерДанные.Ссылка
	                      |ИЗ
	                      |	РегистрСведений.NSI_ХэшиКлючейМастерДанных КАК NSI_ХэшиКлючейМастерДанных
	                      |ГДЕ
	                      |	NSI_ХэшиКлючейМастерДанных.МастерДанные = &МастерДанные
	                      |	И NSI_ХэшиКлючейМастерДанных.МастерДанные.Наименование ЕСТЬ НЕ NULL");
	Запрос.УстановитьПараметр("МастерДанные", МастерДанные);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ОписаниеМастерДанных = NSI_РаботаСМастерДаннымиПоиск.ПолучитьМастерДанныеПоСсылке(МастерДанные);
		ОтветXDTO.DataResponse = ОписаниеМастерДанных;	
	Иначе
		NSI_РаботаСМастерДаннымиРаботаСВнешнимиСистемами.ВернутьОшибкуВебСервиса(ОтветXDTO.Errors, "DataNotFound", "По данному GUID не найдено мастер-данных.");
	КонецЕсли;
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку();
	Запись.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(Запись, ОтветXDTO);
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.УстановитьТелоИзСтроки(Запись.Закрыть());
	Возврат ОтветСервиса;
КонецФункции


Функция GetBigDataByTokenPOST(Запрос)
	//Параметры URL
	ИдентификаторСистемы = Запрос.ПараметрыURL["SourceSystem"];
	Токен = Запрос.ПараметрыURL["Token"];
	
	Если Не ЗначениеЗаполнено(Токен) Или СтрДлина(Токен)<28 Тогда
		Ответ = Новый HTTPСервисОтвет(400, "Token not filled");
		Возврат Ответ;
	КонецЕсли;
	
	Ссылка = Справочники.NSI_БольшиеДанныеДляПередачи.ПолучитьСсылку(Новый УникальныйИдентификатор(Токен));
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	NSI_БольшиеДанныеДляПередачиДанные.Ссылка,
	                      |	NSI_БольшиеДанныеДляПередачиДанные.ОписаниеПередаваемыхДанных,
	                      |	NSI_БольшиеДанныеДляПередачиДанные.Данные,
	                      |	NSI_БольшиеДанныеДляПередачиДанные.Ссылка.СистемаПолучатель,
	                      |	NSI_БольшиеДанныеДляПередачиДанные.НомерСтроки КАК НомерСтроки,
	                      |	NSI_БольшиеДанныеДляПередачиДанные.ДвоичныеДанные
	                      |ИЗ
	                      |	Справочник.NSI_БольшиеДанныеДляПередачи.Данные КАК NSI_БольшиеДанныеДляПередачиДанные
	                      |ГДЕ
	                      |	NSI_БольшиеДанныеДляПередачиДанные.Ссылка = &Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	НомерСтроки");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество()=0 Тогда
		Ответ = Новый HTTPСервисОтвет(404, "Token not found"); 
		Возврат Ответ;
	КонецЕсли;	
	ОтветXDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("mdm", "ArrayOfBigData"));
	СтрокаОшибок = "";
	Пока Выборка.Следующий() Цикл
		ОтветВыборки = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("mdm", "BigDataType"));	
		ОтветВыборки.Description = Выборка.ОписаниеПередаваемыхДанных;
		ДанныеХранилища = Выборка.Данные.Получить();
		Если Выборка.ДвоичныеДанные Тогда
			Если ТипЗнч(ДанныеХранилища)=Тип("ДвоичныеДанные") Тогда
				ОтветВыборки.BinaryData = Base64Строка(ДанныеХранилища);
			Иначе
				NSI_ОбщиеПроцедурыКлиентСервер.ДобавитьСообщениеВСтрокуОшибок(СтрокаОшибок, "Строка"+Выборка.НомерСтроки+". Двоичные данные не найдены.");
			КонецЕсли;
		Иначе
			Запись = Новый ЗаписьXML;
			ИмяФайла = ПолучитьИмяВременногоФайла()+".xml";
			Запись.ОткрытьФайл(ИмяФайла);
			Запись.ЗаписатьОбъявлениеXML();
			Запись.Закрыть();
			ОтветВыборки.XMLData = Base64Строка(Новый ДвоичныеДанные(ИмяФайла));
		КонецЕсли;
		ОтветXDTO.BigData.Добавить(ОтветВыборки);
	КонецЦикла;
	Если ЗначениеЗаполнено(СтрокаОшибок) Тогда
		Ответ = Новый HTTPСервисОтвет(102, СтрокаОшибок);
		Возврат Ответ;
	КонецЕсли;
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку();
	Запись.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(Запись, ОтветXDTO);
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.Заголовки.Вставить("Content-Type: text/xml;");
	ОтветСервиса.УстановитьТелоИзСтроки(Запись.Закрыть());
	Возврат ОтветСервиса;
КонецФункции


Функция HelpGET(Запрос)
	ТекстОтвета = "
	|<HTML>
	|  <HEAD>
	|  	<META HTTP-EQUIV=""REFRESH"" CONTENT=""1; URL=http://1cmsfo/mdm_helponline/spetsifikatsiya_rest_servisa_mdm.html"">
	|  </HEAD>
	|  <BODY>
	|  </BODY>
	|</HTML>";
	ОтветСервиса = Новый HTTPСервисОтвет(200);
	ОтветСервиса.УстановитьТелоИзСтроки(ТекстОтвета);
	ОтветСервиса.Заголовки.Вставить("Content-Type: text/html;");
	Возврат ОтветСервиса;
КонецФункции

