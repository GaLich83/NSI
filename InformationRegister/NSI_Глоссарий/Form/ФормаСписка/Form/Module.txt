
&НаКлиенте
Процедура ЗаполнитьРегистрИзМакетаГлоссария(Команда)
	ЗаполнитьРегистрИзМакетаГлоссарияНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРегистрИзМакетаГлоссарияНаСервере()
	МакетГлоссария = РегистрыСведений.NSI_Глоссарий.ПолучитьМакет("Глоссарий");
	НомерСтроки = 1;
	КоличествоСтрок = МакетГлоссария.ВысотаТаблицы;
	СписокИменЭлементов = МакетГлоссария.ПолучитьОбласть("ИменаЭлементов");
	Для каждого Язык Из Метаданные.Языки Цикл
		Для Каждого ЯзыкПеревода Из Метаданные.Языки Цикл
			Если ЯзыкПеревода = Язык Тогда
				Продолжить;
			КонецЕсли;
			НомерСтроки = 0;
			ИсходнаяСтрока = МакетГлоссария.ПолучитьОбласть(Язык.КодЯзыка+"Заголовок");
			Перевод = МакетГлоссария.ПолучитьОбласть(ЯзыкПеревода.КодЯзыка+"Заголовок");
			СоответствиеЭлементов = Новый Соответствие;
			Пока НомерСтроки <= КоличествоСтрок Цикл
				НоваяЗапись = РегистрыСведений.NSI_Глоссарий.СоздатьМенеджерЗаписи();
				НоваяЗапись.ЯзыкНазначения = ЯзыкПеревода.КодЯзыка;
				НоваяЗапись.ЯзыкИсходный = Язык.КодЯзыка;
				НоваяЗапись.СтрокаНаИсходномЯзыке = ИсходнаяСтрока.Область(НомерСтроки,1).Текст;
				НоваяЗапись.СтрокаНаЯзыкеНазначения = Перевод.Область(НомерСтроки,1).Текст;;
				НоваяЗапись.Записать();
				НомерСтроки = НомерСтроки + 1;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	//ПараметрыСеанса.Глоссарий = Новый ФиксированноеСоответствие(СоответствиеЭлементов);
КонецПроцедуры

&НаСервереБезКонтекста
Функция РазобратьСтрокуПоЗапятым(Строк)
	СтрокаСРазделителями = СтрЗаменить(Строк,";", Символы.ПС);
	Массив = Новый Массив;
	Для Н = 1 По СтрЧислоСтрок(СтрокаСРазделителями) Цикл 
		ТекЗначение = СтрПолучитьСтроку(СтрокаСРазделителями, Н); 
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			Массив.Добавить(СокрЛП(ТекЗначение));
		КонецЕсли;
	КонецЦикла;
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура СоздатьМакетГлоссария(Команда)
	ТабДок = ПолучитьТабДок();
	ТабДок.Показать();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТабДок()
	НомерКолонкиИмени = 1;
	Ц = 2;
	СоответствиеЯзыков = Новый Соответствие;
	Для каждого Язык Из Метаданные.Языки Цикл
		СоответствиеЯзыков.Вставить(Язык.КодЯзыка,Ц);	
		Ц=Ц+2;
	КонецЦикла;
	ТабДок = Новый ТабличныйДокумент;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	lang_Глоссарий.ИмяЭлемента КАК ИмяЭлемента,
	                      |	lang_Глоссарий.Язык,
	                      |	lang_Глоссарий.Заголовок,
	                      |	lang_Глоссарий.РасширеннаяПодсказка
	                      |ИЗ
	                      |	РегистрСведений.NSI_Глоссарий КАК lang_Глоссарий
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ИмяЭлемента
	                      |ИТОГИ ПО
	                      |	ИмяЭлемента");	
	ВыборкаПоИмени = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Ц=1;
	Пока ВыборкаПоИмени.Следующий() Цикл
		ТабДок.Область(Ц, НомерКолонкиИмени).Текст = ВыборкаПоИмени.ИмяЭлемента;
		ВыборкаПереводов = ВыборкаПоИмени.Выбрать();
		Пока ВыборкаПереводов.Следующий() Цикл
			КолонкаПеревода = СоответствиеЯзыков.Получить(ВыборкаПереводов.Язык);
			Если КолонкаПеревода = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ТабДок.Область(Ц, КолонкаПеревода).Текст = ВыборкаПереводов.Заголовок;
			ТабДок.Область(Ц, КолонкаПеревода+1).Текст = ВыборкаПереводов.РасширеннаяПодсказка;
		КонецЦикла;
		Ц = Ц+1;
	КонецЦикла;
	ТабДок.Область(,НомерКолонкиИмени, ,НомерКолонкиИмени).Имя = "ИменаЭлементов";
	Для каждого Язык Из Метаданные.Языки Цикл
		КолонкаПеревода = СоответствиеЯзыков.Получить(Язык.КодЯзыка);
		Если КолонкаПеревода = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ТабДок.Область(, КолонкаПеревода, ,КолонкаПеревода).Имя = Язык.КодЯзыка+"Заголовок";
		ТабДок.Область(, КолонкаПеревода+1, ,КолонкаПеревода+1).Имя = Язык.КодЯзыка+"РасширеннаяПодсказка";
	КонецЦикла;
	ОбщаяОбласть = ТабДок.Область(,1,,КолонкаПеревода+1);
	ОбщаяОбласть.ШиринаКолонки = 25;
	ОбщаяОбласть.Шрифт = Новый Шрифт("Arial Unicode MS", 12);
	Возврат ТабДок;
КонецФункции


&НаСервере
Процедура ПометитьВсеКакПроверенныеНаСервере()
	Набор = РегистрыСведений.NSI_Глоссарий.СоздатьНаборЗаписей();
	Набор.Прочитать();
	Для Каждого Строк Из Набор Цикл
		Строк.Проверен = Истина;
	КонецЦикла;
	Набор.Записать(Истина);
КонецПроцедуры


&НаКлиенте
Процедура ПометитьВсеКакПроверенные(Команда)
	ПометитьВсеКакПроверенныеНаСервере();
КонецПроцедуры

