Процедура ПеревестиФормуНаСервере(Форма, МассивДополнительныхНезначащихСуффиксовПрефиксов=Неопределено) Экспорт
	Если Не РольДоступна(Метаданные.Роли.lang_ИспользованиеПереводаИнтерфейсов) Тогда
		Возврат;
	КонецЕсли;
	Если МассивДополнительныхНезначащихСуффиксовПрефиксов=Неопределено Тогда
		МассивДополнительныхНезначащихСуффиксовПрефиксов = Новый Массив;
	КонецЕсли;
	Попытка
		Пар = ПараметрыСеанса.lang_Глоссарий;	
	Исключение
		ЗагрузитьГлоссарийВПараметрСеанса();
	КонецПопытки;
	Для каждого Эл Из Форма.Элементы Цикл
		Если ТипЗнч(Эл.Родитель) = Тип("ТаблицаФормы") ИЛИ ТипЗнч(Эл.Родитель)=Тип("ГруппаФормы") Тогда
			ИмяЭлемента = СтрЗаменить(Эл.Имя, НайтиИмяРодителя(Эл), "");
		Иначе 
			ИмяЭлемента = Эл.Имя;
		КонецЕсли;
		Для каждого НезначащийСуффиксПрефикс Из МассивДополнительныхНезначащихСуффиксовПрефиксов Цикл
			ИмяЭлемента = СтрЗаменить(ИмяЭлемента, НезначащийСуффиксПрефикс,"");
		КонецЦикла;		
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"КомпоновщикНастроек","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"КонтекстноеМеню","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"НастройкиОтбор","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"НастройкиПользовательскиеПоля","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"НастройкиУсловноеОформление","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"НастройкиПорядок","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"Результат","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"Форма","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"_","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"1","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"2","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"3","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"4","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"5","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"6","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"7","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"8","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"9","");
		ИмяЭлемента = СтрЗаменить(ИмяЭлемента,"0","");
		ЗначениеПеревода = ПараметрыСеанса.lang_Глоссарий.Получить(ИмяЭлемента);
		Если ЗначениеПеревода = Неопределено Тогда
			Продолжить;		
		КонецЕсли; 
		Если Найти(ИмяЭлемента, "РасширеннаяПодсказка")=0 Тогда
			Эл.Заголовок = ЗначениеПеревода.Заголовок;
		Иначе
			Эл.Заголовок = ЗначениеПеревода.РасширеннаяПодсказка;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция НайтиИмяРодителя(Элемент)
	ИмяРодителя = "";
	Если ТипЗнч(Элемент.Родитель) = Тип("ГруппаФормы") Тогда
		Если Элемент.Родитель.Вид = ВидГруппыФормы.КонтекстноеМеню Тогда
			Возврат Элемент.Родитель.Имя;
		Иначе
			Возврат НайтиИмяРодителя(Элемент.Родитель);
		КонецЕсли; 
	ИначеЕсли ТипЗнч(Элемент.Родитель) = Тип("ТаблицаФормы") Тогда
		Возврат Элемент.Родитель.Имя;
	КонецЕсли;
КонецФункции

Функция ЗагрузитьГлоссарийВПараметрСеанса() Экспорт
	Попытка
		Язык = ПараметрыСеанса.lang_ТекущийЯзык;
	Исключение
		ПараметрыСеанса.lang_ТекущийЯзык = ЯзыкПриложения();
	КонецПопытки;
	СоответствиеЭлементов = Новый Соответствие;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	lang_Глоссарий.ИмяЭлемента,
	                      |	lang_Глоссарий.Заголовок,
	                      |	lang_Глоссарий.РасширеннаяПодсказка
	                      |ИЗ
	                      |	РегистрСведений.NSI_Глоссарий КАК lang_Глоссарий
	                      |ГДЕ
	                      |	lang_Глоссарий.Язык = &Язык");
	Запрос.УстановитьПараметр("Язык", ПараметрыСеанса.lang_ТекущийЯзык);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураПеревода = Новый Структура("Заголовок, РасширеннаяПодсказка", Выборка.Заголовок, Выборка.РасширеннаяПодсказка);
		СоответствиеЭлементов.Вставить(Выборка.ИмяЭлемента, Новый ФиксированнаяСтруктура(СтруктураПеревода));
	КонецЦикла; 
	ПараметрыСеанса.lang_Глоссарий = Новый ФиксированноеСоответствие(СоответствиеЭлементов);
КонецФункции

Функция ЯзыкПриложения() Экспорт;

    ПользовательИнформационнойБазы = ПользователиИнформационнойБазы.ТекущийПользователь();

    Возврат ПользовательИнформационнойБазы.Язык.КодЯзыка;

КонецФункции

  



